# Build and release URLCheck to Github
name: Build and Release

on:
  push:
    tags:
      - '*'

  workflow_dispatch:

jobs:

  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

#     - name: Lint
#       run: ./gradlew urlChecker:lint

      - name: Test
        run: ./gradlew urlChecker:test

      - name: Build library
        run: ./gradlew urlChecker:assembleRelease

#      - name: Save library to artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          path: urlChecker/build/outputs/aar/*

      - name: Build App
        run: ./gradlew app:assembleRelease

#      - name: Save application to artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          path: app/build/outputs/apk/release/*

#      - name: Download artifact
#        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Set release name
        run: echo RELEASE_NAME=${GITHUB_REF} >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.RELEASE_NAME }}
          body:
            New version of URLCheck.
          draft: false
          prerelease: false

      - name: Upload aar to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./urlChecker/build/outputs/aar/URLCheck-release.aar
          asset_name: URLCheck-release.aar
          # Common MIME types:https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
          asset_content_type: application/zip

      - name: Upload apk to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/URLCheck-release.apk
          asset_name: URLCheck-release.apk
          # Common MIME types:https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
          asset_content_type: application/zip
          overwrite: true
